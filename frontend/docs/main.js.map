{"version":3,"sources":["./src/app/shared/menu-item.ts","./src/app/snackbar.service.ts","./src/app/best-seller/best-seller.component.ts","./src/app/best-seller/best-seller.component.html","./src/app/shared/global-constant.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/shared/accordion/accordion.directive.ts","./src/app/shared/accordion/accordionlink.directive.ts","./src/app/material-component/dialog/change-password/change-password.component.ts","./src/app/material-component/dialog/change-password/change-password.component.html","./src/app/shared/accordion/index.ts","./src/app/layouts/full/sidebar/sidebar.component.ts","./src/app/layouts/full/sidebar/sidebar.component.html","./src/app/shared/shared.module.ts","./src/app/layouts/full/full.component.ts","./src/app/layouts/full/full.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/material-component/dialog/confirmation/confirmation.component.ts","./src/app/material-component/dialog/confirmation/confirmation.component.html","./src/app/forgot-password/forgot-password.component.ts","./src/app/forgot-password/forgot-password.component.html","./src/app/app.module.ts","./src/app/services/userservice.service.ts","./src/app/services/auth.service.ts","./src/app/services/route-guard.service.ts","./src/app/shared/material-module.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/layouts/full/header/header.component.ts","./src/app/layouts/full/header/header.component.html","./src/app/shared/accordion/accordionanchor.directive.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/services/token-interceptor.interceptor.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\n\r\nexport interface Menu {\r\n    state: string;\r\n    name: string;\r\n    icon: string;\r\n    role: string;\r\n}\r\n\r\nconst MENUITEMS = [\r\n    { state: 'dashboard', name: 'Dashboard', icon: 'dashboard', role: '' },\r\n    { state: 'category', name: 'Manage Category', icon: 'category', role: 'admin' },\r\n    { state: 'product', name: 'Manage Product', icon: 'inventory_2', role: 'admin' },\r\n    { state: 'order', name: 'Manage Order', icon: 'list_alt', role: '' },\r\n    { state: 'bill', name: 'View Bill', icon: 'import_contacts', role: '' },\r\n    { state: 'user', name: 'View User', icon: 'people', role: 'admin' },\r\n\r\n];\r\n\r\n@Injectable()\r\nexport class MenuItems{\r\n    getMenuitem():Menu[]{\r\n        return MENUITEMS;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackbarService {\n\n  constructor(private snackbar: MatSnackBar) { }\n\n  openSnackBar(message: string, action: string) {\n    if (action === 'error') {\n      this.snackbar.open(message, '', {\n        horizontalPosition: \"right\",\n        verticalPosition: \"top\",\n        duration: 2000,\n        panelClass: ['black-snackbar']\n      });\n    }\n    else {\n      this.snackbar.open(message, '', {\n        horizontalPosition: \"right\",\n        verticalPosition: \"top\",\n        duration: 2000,\n        panelClass: ['green-snackbar']\n      });\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-best-seller',\r\n  templateUrl: './best-seller.component.html',\r\n  styleUrls: ['./best-seller.component.scss']\r\n})\r\nexport class BestSellerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"page-section\" id=\"about\">\r\n    <div class=\"container\">\r\n        <div class=\"text-center\">\r\n            <h2 class=\"section-heading text-uppercase\">Best Seller</h2>\r\n        </div>\r\n        <ul class=\"timeline\">\r\n            <li><a href=\"../../assets/img/1.jpg\" target=\"_blank\">\r\n                    <div class=\"timeline-image\"><img class=\"rounded-circle img-fluid\" src=\"../../assets/img/1.jpg\"\r\n                            alt=\"...\" /></div>\r\n                </a>\r\n                <div class=\"timeline-panel\">\r\n                    <div class=\"timeline-heading\">\r\n                        <h4>Pizza</h4>\r\n                    </div>\r\n                    <div class=\"timeline-body\">\r\n                        <p class=\"text-muted\">Pizza is an Italian dish consisting of a usually round, flattened base of\r\n                            leavened wheat-based dough topped with tomatoes, cheese, and often various other\r\n                            ingredients, which is then baked at a high temperature, traditionally in a wood-fired oven.\r\n                            A small pizza is sometimes called a pizzetta.</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"timeline-inverted\">\r\n                <a href=\"../../assets/img/2.jpg\" target=\"_blank\">\r\n                    <div class=\"timeline-image\"><img class=\"rounded-circle img-fluid\" src=\"../../assets/img/2.jpg\"\r\n                            alt=\"...\" /></div>\r\n                </a>\r\n                <div class=\"timeline-panel\">\r\n                    <div class=\"timeline-heading\">\r\n                        <h4>Biryani</h4>\r\n                    </div>\r\n                    <div class=\"timeline-body\">\r\n                        <p class=\"text-muted\">Biryani is a mixed rice dish. It is made with Indian spices, rice, and\r\n                            meat usually that of chicken, fish, and sometimes, in addition, eggs or vegetables such as\r\n                            potatoes in certain regional varieties.</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li>\r\n                <a href=\"../../assets/img/3.jpg\" target=\"_blank\">\r\n                    <div class=\"timeline-image\"><img class=\"rounded-circle img-fluid\" src=\"../../assets/img/3.jpg\"\r\n                            alt=\"...\" /></div>\r\n                </a>\r\n                <div class=\"timeline-panel\">\r\n                    <div class=\"timeline-heading\">\r\n                        <h4>Pasta</h4>\r\n                    </div>\r\n                    <div class=\"timeline-body\">\r\n                        <p class=\"text-muted\">Pasta is a type of food typically made from an unleavened dough of wheat\r\n                            flour mixed with water or eggs, and formed into sheets or other shapes, then cooked by\r\n                            boiling or baking.</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"timeline-inverted\">\r\n                <a href=\"../../assets/img/4.jpg\" target=\"_blank\">\r\n                    <div class=\"timeline-image\"><img class=\"rounded-circle img-fluid\" src=\"../../assets/img/4.jpg\"\r\n                            alt=\"...\" /></div>\r\n                </a>\r\n                <div class=\"timeline-panel\">\r\n                    <div class=\"timeline-heading\">\r\n                        <h4>Molten chocolate cake</h4>\r\n                    </div>\r\n                    <div class=\"timeline-body\">\r\n                        <p class=\"text-muted\">Molten chocolate cake is a popular dessert that combines the elements of a\r\n                            chocolate cake and a soufflé. Its name derives from the dessert's liquid chocolate center,\r\n                            and it is also known as chocolate moelleux, chocolate lava cake, or simply lava cake.</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"timeline-inverted\">\r\n                <div class=\"timeline-image\">\r\n                    <h4>\r\n                        Be Part\r\n                        <br />\r\n                        Of Our\r\n                        <br />\r\n                        Cafe!\r\n                    </h4>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</section>","export class GlobalConstant {\r\n    //Message\r\n    public static genericError: string = \"Something went wrong. Please try again later\";\r\n\r\n    public static productExistError:string = \"Product already exist\";\r\n\r\n    public static productAdded:string = \"Product Added Sucessfully\";\r\n\r\n    //Regex\r\n    public static nameRegex: string = \"[a-zA-Z0-9 ]*\";\r\n\r\n    public static emailRegex: string = \"[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}\";\r\n\r\n    public static contactNumberRegex: string = \"^[e0-9]{10,10}$\";\r\n\r\n    //Variable\r\n\r\n    public static error: string = \"error\";\r\n\r\n    public static unauthorized: string =\"You are not authorized person to access this page.\";\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ForgotPasswordComponent } from '../forgot-password/forgot-password.component';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { UserserviceService } from '../services/userservice.service';\r\nimport { SignupComponent } from '../signup/signup.component';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(private dialog:MatDialog,\r\n    private router:Router,\r\n    private userService:UserserviceService) { }\r\n\r\n  ngOnInit(): void {\r\n    if(localStorage.getItem('token')!= null)\r\n    {\r\n      this.userService.checkToken().subscribe((response:any)=>{\r\n        this.router.navigate(['/cafe/dashboard'])\r\n      },(error:any)=>{\r\n        console.log(error);\r\n      })\r\n    }\r\n   \r\n  }\r\n\r\n  signupAction()\r\n  {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width ='550px';\r\n    this.dialog.open(SignupComponent,dialogConfig)\r\n  }\r\n\r\n  forgotPasswordAction()\r\n  {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width='550px',\r\n    this.dialog.open(ForgotPasswordComponent,dialogConfig)\r\n  }\r\n\r\n  loginAction()\r\n  {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width='550px',\r\n    this.dialog.open(LoginComponent,dialogConfig)\r\n  }\r\n\r\n}\r\n","<div class=\"bg-image\"></div>\r\n<app-best-seller></app-best-seller>\r\n\r\n<div class=\"wrapper sticky\">\r\n  <nav class=\"navbar-fixed-top\">\r\n    <a href=\"#\" class=\"logo\">\r\n      <mat-icon>storefront</mat-icon> Cafe Management System\r\n    </a>\r\n    <ul>\r\n      <li><a (click)=\"signupAction()\">SignUp</a></li>\r\n      <li><a (click)=\"forgotPasswordAction()\">Forgot Password</a></li>\r\n      <li><a (click)=\"loginAction()\">Login</a></li>\r\n\r\n    </ul>\r\n  </nav>\r\n</div>\r\n<div class=\"footer\" id=\"signup\">\r\n  <h2>All right reserved </h2>\r\n</div>","export const environment = {\r\n  production: false,\r\n  apiUrl:\"http://localhost:8080\"\r\n};","import {\r\n  Directive,\r\n  OnInit,\r\n  AfterViewInit,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]'\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf(link.group) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe(e => this.checkOpenLinks());\r\n  }\r\n\r\n  constructor(private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionLink]'\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  public group: any;\r\n\r\n  @HostBinding('class.selected')\r\n  @Input()\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: boolean) {\r\n    this._selected = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _selected: boolean=false;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.selected = !this.selected;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { UserserviceService } from 'src/app/services/userservice.service';\nimport { GlobalConstant } from 'src/app/shared/global-constant';\nimport { SnackbarService } from 'src/app/snackbar.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  changePasswordForm:any = FormGroup;\n  responseMessage:any;\n\n  constructor(private formBuilder:FormBuilder,\n    private dialogRef:MatDialogRef<ChangePasswordComponent>,\n    private ngxService:NgxUiLoaderService,\n    private snackbarService:SnackbarService,\n    private userService:UserserviceService,\n    ) { }\n\n  ngOnInit(): void {\n    this.changePasswordForm = this.formBuilder.group({\n      oldPassword:[null,[Validators.required]],\n      newPassword:[null,[Validators.required]],\n      confirmPassword:[null,[Validators.required]]\n    })\n  }\n\n  validateSubmit()\n  {\n    if(this.changePasswordForm.controls['newPassword'].value != this.changePasswordForm.controls['confirmPassword'].value)\n    {\n      return true\n    }\n    else{\n      return false\n    }\n  }\n\n  handleChangePasswordSubmit(){\n    this.ngxService.start();\n    var formData = this.changePasswordForm.value;\n\n    var data = {\n      oldPassword:formData.oldPassword,\n      newPassword:formData.newPassword,\n      confirmPassword:formData.confirmPassword\n    }\n\n    this.userService.changePassword(data).subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.responseMessage = response?.message;\n      this.dialogRef.close();\n      this.snackbarService.openSnackBar(this.responseMessage,\"success\");\n    },(error)=>{\n      console.log(error);\n      this.ngxService.stop();\n      if(error.error?.message)\n      {\n        this.responseMessage = error.error?.message;\n      }\n      else{\n        this.responseMessage = GlobalConstant.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error)\n    })\n\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row fxLayout=\"row\">\n    <span class=\"title-center\">Change Password</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content>\n  <form [formGroup]=\"changePasswordForm\">\n    <div fxFlex fxLayout=\"column\">\n      <mat-form-field appearance=\"outline\" fxFlex>\n        <mat-label>Old Password</mat-label>\n        <input\n          matInput\n          formControlName=\"oldPassword\"\n          type=\"password\"\n          required\n        />\n        <mat-error\n          *ngIf=\"\n            changePasswordForm.controls.oldPassword.touched &&\n            changePasswordForm.controls.oldPassword.invalid\n          \"\n        >\n          <span *ngIf=\"changePasswordForm.controls.error.required\"\n            >This field is mandatory.</span\n          >\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\" fxFlex>\n        <mat-label>New Password</mat-label>\n        <input\n          matInput\n          formControlName=\"newPassword\"\n          type=\"password\"\n          required\n        />\n        <mat-error\n          *ngIf=\"\n            changePasswordForm.controls.newPassword.touched &&\n            changePasswordForm.controls.newPassword.invalid\n          \"\n        >\n          <span *ngIf=\"changePasswordForm.controls.error.required\"\n            >This field is mandatory.</span\n          >\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\" fxFlex>\n        <mat-label>Confirm Password</mat-label>\n        <input\n          matInput\n          formControlName=\"confirmPassword\"\n          type=\"password\"\n          required\n        />\n        <mat-error\n          *ngIf=\"\n            changePasswordForm.controls.confirmPassword.touched &&\n            changePasswordForm.controls.confirmPassword.invalid\n          \"\n        >\n          <span *ngIf=\"changePasswordForm.controls.error.required\"\n            >This field is mandatory.</span\n          >\n        </mat-error>\n        <mat-hint\n          *ngIf=\"\n            validateSubmit() &&\n            !changePasswordForm.controls.confirmPassword.invalid\n          \"\n        >\n          <span>New Password & Confirm Password did'nt match</span>\n        </mat-hint>\n      </mat-form-field>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"center\">\n  <button\n    mat-raised-button\n    color=\"primary\"\n    type=\"submit\"\n    (click)=\"handleChangePasswordSubmit()\"\n    [disabled]=\"\n      validateSubmit() ||\n      !(changePasswordForm.valid && changePasswordForm.dirty)\n    \"\n  >\n    Update\n  </button>\n  <button mat-raised-button mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","export * from './accordionanchor.directive';\r\nexport * from './accordionlink.directive';\r\nexport * from './accordion.directive';\r\n","import { ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport jwt_decode from \"jwt-decode\";\nimport { MenuItems } from 'src/app/shared/menu-item';\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: []\n})\nexport class AppSidebarComponent implements OnDestroy {\n  mobileQuery: MediaQueryList;\n  token:any = localStorage.getItem('token');\n  tokenPayload:any;\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public menuItems:MenuItems\n  ) {\n    this.tokenPayload = jwt_decode(this.token);\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n}\n","<mat-nav-list appAccordion>\r\n    <mat-list-item appAccordionLink *ngFor=\"let menuitem of menuItems.getMenuitem()\" routerLinkActive=\"selected\" group=\"{{menuitem.state}}\">\r\n        <a appAccordionToggle routerLink=\"['/cafe',menuitem.state]\" *ngIf=\"(menuitem.role === '' || menuitem.role === tokenPayload.role)\">\r\n            <mat-icon>{{menuitem.icon}}</mat-icon>\r\n            <span>{{menuitem.name}}</span>\r\n        </a>\r\n    </mat-list-item>\r\n</mat-nav-list>","import { NgModule } from '@angular/core';\r\n\r\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\r\nimport { MenuItems } from './menu-item';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n  ],\r\n  exports: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n   ],\r\n  providers: [MenuItems ]\r\n})\r\nexport class SharedModule { }\r\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { ChangeDetectorRef, Component, OnDestroy, AfterViewInit } from '@angular/core';\n\n\n/** @title Responsive sidenav */\n@Component({\n  selector: 'app-full-layout',\n  templateUrl: 'full.component.html',\n  styleUrls: []\n})\nexport class FullComponent implements OnDestroy, AfterViewInit {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n  ngAfterViewInit() { }\n}\n","<div class=\"main-container\">\n    <mat-toolbar color=\"primary\" class=\"topbar telative\">\n        <div class=\"navbar-header\">\n            <button mat-icon-button (click)=\"snav.toggle()\" value=\"sidebarclosed\" style=\"vertical-align: bottom;\">\n                <mat-icon>menu</mat-icon>\n            </button><b>\n                <span style=\"vertical-align: middle;\">\n                    <mat-icon>storefront</mat-icon>\n                </span>\n            </b>\n            <span fxShow=\"false\" fxShow.gt-xs>\n                Cafe Management System\n            </span>\n        </div>\n        <span fxFlex></span>\n        <app-header></app-header>\n    </mat-toolbar>\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\">\n        <mat-sidenav #snav id=\"snav\" class=\"dark-sidebar pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\"\n            fixedTopGap=\"0\" [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\">\n            <app-sidebar></app-sidebar>\n        </mat-sidenav>\n        <mat-sidenav-content class=\"page-wrapper\">\n            <div class=\"page-content\">\n                <router-outlet></router-outlet>\n            </div>\n        </mat-sidenav-content>\n    </mat-sidenav-container>\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Frontend';\r\n}\r\n","<router-outlet></router-outlet>\r\n<ngx-ui-loader></ngx-ui-loader>","import { Component, OnInit,EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.scss']\n})\nexport class ConfirmationComponent implements OnInit {\n\n  onEmitStatusChange = new EventEmitter();\n  details:any={};\n  constructor(@Inject(MAT_DIALOG_DATA)public dialogData:any) { }\n\n  ngOnInit(): void {\n    if(this.dialogData)\n    {\n      this.details = this.dialogData;\n    }\n  }\n\n  handleChangeAction()\n  {\n    this.onEmitStatusChange.emit();\n  }\n\n}\n","<mat-dialog-content class=\"mat-typography\">\n<h5>Are you sure want to {{details.message}} ?</h5>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-raised-button color=\"primary\" (click)=\"handleChangeAction()\">Yes</button>\n    <button mat-raised-button mat-dialog-close color=\"accent\">No</button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { UserserviceService } from '../services/userservice.service';\nimport { GlobalConstant } from '../shared/global-constant';\nimport { SnackbarService } from '../snackbar.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgotPasswordForm:any = FormGroup;\n  responseMessage:any;\n  constructor(\n    private formBuilder:FormBuilder,\n    private userService:UserserviceService,\n    private dialogRef:MatDialogRef<ForgotPasswordComponent>,\n    private ngxService:NgxUiLoaderService,\n    private snackBarService:SnackbarService\n  ) { }\n\n  ngOnInit(): void {\n    this.forgotPasswordForm = this.formBuilder.group({\n      email:[null,[Validators.required,Validators.pattern(GlobalConstant.emailRegex)]],\n\n    })\n  }\n\n    handleSubmit()\n    {\n      this.ngxService.start();\n      var formData = this.forgotPasswordForm.value;\n      var data ={\n        email:formData.email\n      }\n      this.userService.forgotPassword(data).subscribe((response:any)=>{\n        this.ngxService.stop();\n        this.responseMessage = response?.message;\n        this.dialogRef.close();\n        this.snackBarService.openSnackBar(this.responseMessage,'');\n\n      },(error)=>{\n        this.ngxService.stop();\n        if(error.error?.message)\n        {\n          this.responseMessage = error.error?.message;\n        }\n        else{\n          this.responseMessage = GlobalConstant.genericError;\n        }\n        this.snackBarService.openSnackBar(this.responseMessage,GlobalConstant.error);\n      })\n\n    }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row fxLayout=\"row\">\n        <span class=\"text-center\">Forgot Password</span>\n    </mat-toolbar-row>\n</mat-toolbar>\n\n\n\n<mat-dialog-content class=\"mat-typography\">\n    <form [formGroup]=\"forgotPasswordForm\">\n        <div fxFlex fxLayout=\"column\">\n            <mat-form-field appearance=\"outline\" fxFlex>\n                <mat-label>Email:</mat-label>\n\n                <input matInput  formControlName=\"email\" required=\"\">\n                <mat-error *ngIf=\"forgotPasswordForm.controls.email.touched && forgotPasswordForm.controls.email.invalid\">\n                    <span *ngIf=\"forgotPasswordForm.controls.email.errors.required\">This field is Required</span>\n                    <span *ngIf=\"forgotPasswordForm.controls.email.errors.pattern\">This field is Invalid</span>\n                </mat-error>\n            </mat-form-field>\n\n        </div>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"center\">\n    <button mat-raised-button color=\"primary\">Submit</button>\n    <button mat-raised-button mat-dialog-close  color=\"primary\">Close</button>\n</mat-dialog-actions>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './shared/material-module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BestSellerComponent } from './best-seller/best-seller.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\r\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { NgxUiLoaderModule,NgxUiLoaderConfig,SPINNER,PB_DIRECTION } from 'ngx-ui-loader';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { TokenInterceptorInterceptor } from './services/token-interceptor.interceptor';\r\n\r\nconst ngxUiLoaderConfig:NgxUiLoaderConfig={\r\n    text:\"Loading...\",\r\n    textPosition:'center-center',\r\n    pbColor:\"red\",\r\n    bgsColor:\"red\",\r\n    fgsColor:\"red\",\r\n    fgsType:SPINNER.ballSpinClockwise,\r\n    fgsSize:100,\r\n    pbDirection:PB_DIRECTION.leftToRight,\r\n    pbThickness:5,\r\n    textColor:\"#FFFFFF\"\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\t\r\n    AppComponent,\r\n    HomeComponent,\r\n    BestSellerComponent,\r\n    FullComponent,\r\n    AppHeaderComponent,\r\n    AppSidebarComponent,\r\n    SignupComponent,\r\n    ForgotPasswordComponent,\r\n    LoginComponent\r\n   ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    SharedModule,\r\n    HttpClientModule,\r\n    NgxUiLoaderModule.forRoot(ngxUiLoaderConfig)\r\n\r\n  ],\r\n  providers: [HttpClientModule,{provide:HTTP_INTERCEPTORS,useClass:TokenInterceptorInterceptor,multi:true}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {environment} from '../../environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserserviceService {\n  url = environment.apiUrl;\n  constructor(private httpClient:HttpClient) { }\n\n  singup(data:any)\n  {\n    return this.httpClient.post(this.url + '/user/signup',data,{\n      headers:new HttpHeaders().set('Content-Type',\"application/json\")\n    })\n\n  }\n\n  forgotPassword(data:any)\n  {\n    return this.httpClient.post(this.url + '/user/forgotPassword',data,{\n      headers: new HttpHeaders().set('Content-Type',\"application/json\")\n    })\n  }\n\n  login(data:any){\n    return this.httpClient.post(this.url +\"/user/login\",data,{\n      headers: new HttpHeaders().set('Content-Type',\"application/json\")\n    })\n  }\n\n  checkToken()\n  {\n    return this.httpClient.get(this.url + \"/user/checkToken\");\n  }\n\n  changePassword(data:any)\n  {\n    return this.httpClient.post(this.url + '/user/changePassword',data,{\n      headers: new HttpHeaders().set(\"Content-Type\",\"application/json\")\n    })\n  }\n\n  getUsers()\n  {\n    return this.httpClient.get(this.url + '/user/get/')\n  }\n\n  update(data:any)\n  {\n    return this.httpClient.patch(this.url + '/user/update',data,{\n      headers:new HttpHeaders().set('Content-Type','application/json')\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private router:Router) { }\n\n  public isAuthenticatied():boolean{\n    const token = localStorage.getItem('token');\n    if(!token)\n    {\n      this.router.navigate(['/']);\n      return false;\n    }\n    else\n    {\n      return true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { SnackbarService } from '../snackbar.service';\nimport { AuthService } from './auth.service';\nimport jwt_decode from 'jwt-decode';\nimport { GlobalConstant } from '../shared/global-constant';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService {\n\n  constructor(public auth:AuthService,\n    public router:Router,\n    private snackBarService:SnackbarService) { }\n\n    canActivate(route:ActivatedRouteSnapshot):boolean{\n      let expectedRoleArray = route.data;\n      expectedRoleArray = expectedRoleArray.expectedRole;\n\n      const token:any=localStorage.getItem('token');\n      var tokenPayload:any;\n      try{\n        tokenPayload = jwt_decode(token);\n      }\n      catch(err)\n      {\n        localStorage.clear();\n        this.router.navigate(['/']);\n      }\n\n      let checkRole = false;\n      for(let i=0;i<expectedRoleArray.length; i++)\n      {\n        if(expectedRoleArray[i]==tokenPayload.role)\n        {\n          checkRole = true;\n        }\n      }\n\n      if(tokenPayload.role =='user' || tokenPayload.role =='admin')\n      {\n        if(this.auth.isAuthenticatied() && checkRole)\n        {\n          return true;\n        }\n        this.snackBarService.openSnackBar(GlobalConstant.unauthorized,GlobalConstant.error);\n        this.router.navigate(['/cafe/dashboard']);\n        return false;\n      }\n      else\n      {\n        this.router.navigate(['/'])\n        localStorage.clear();\n        return false;\n      }\n    }\n}\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n import { NgModule } from '@angular/core';\r\n import { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n import { MatButtonModule } from '@angular/material/button';\r\n import { MatButtonToggleModule } from '@angular/material/button-toggle';\r\n import { MatCardModule } from '@angular/material/card';\r\n import { MatCheckboxModule } from '@angular/material/checkbox';\r\n import { MatChipsModule } from '@angular/material/chips';\r\n import { MatDatepickerModule } from '@angular/material/datepicker';\r\n import { MatDialogModule } from '@angular/material/dialog';\r\n import { MatExpansionModule } from '@angular/material/expansion';\r\n import { MatFormFieldModule } from '@angular/material/form-field';\r\n import { MatGridListModule } from '@angular/material/grid-list';\r\n import { MatIconModule } from '@angular/material/icon';\r\n import { MatInputModule } from '@angular/material/input';\r\n import { MatListModule } from '@angular/material/list';\r\n import { MatMenuModule } from '@angular/material/menu';\r\n import { MatPaginatorModule } from '@angular/material/paginator';\r\n import { MatProgressBarModule } from '@angular/material/progress-bar';\r\n import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n import { MatRadioModule } from '@angular/material/radio';\r\n import { MatSelectModule } from '@angular/material/select';\r\n import { MatSidenavModule } from '@angular/material/sidenav';\r\n import { MatSliderModule } from '@angular/material/slider';\r\n import { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n import { MatSnackBarModule } from '@angular/material/snack-bar';\r\n import { MatSortModule } from '@angular/material/sort';\r\n import { MatTableModule } from '@angular/material/table';\r\n import { MatTabsModule } from '@angular/material/tabs';\r\n import { MatToolbarModule } from '@angular/material/toolbar';\r\n import { MatTooltipModule } from '@angular/material/tooltip';\r\n import { MatStepperModule } from '@angular/material/stepper';\r\n import { MatBadgeModule } from '@angular/material/badge';\r\n import { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\n import { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\n \r\n import { CdkTableModule } from '@angular/cdk/table';\r\n import { CdkAccordionModule } from '@angular/cdk/accordion';\r\n import { A11yModule } from '@angular/cdk/a11y';\r\n import { BidiModule } from '@angular/cdk/bidi';\r\n import { OverlayModule } from '@angular/cdk/overlay';\r\n import { PlatformModule } from '@angular/cdk/platform';\r\n import { ObserversModule } from '@angular/cdk/observers';\r\n import { PortalModule } from '@angular/cdk/portal';\r\n \r\n /**\r\n  * NgModule that includes all Material modules that are required to serve the demo-app.\r\n  */\r\n @NgModule({\r\n     exports: [\r\n         MatAutocompleteModule,\r\n         MatButtonModule,\r\n         MatBottomSheetModule,\r\n         MatButtonToggleModule,\r\n         MatCardModule,\r\n         MatCheckboxModule,\r\n         MatChipsModule,\r\n         MatTableModule,\r\n         MatDatepickerModule,\r\n         MatDialogModule,\r\n         MatExpansionModule,\r\n         MatFormFieldModule,\r\n         MatGridListModule,\r\n         MatIconModule,\r\n         MatInputModule,\r\n         MatListModule,\r\n         MatMenuModule,\r\n         MatPaginatorModule,\r\n         MatProgressBarModule,\r\n         MatProgressSpinnerModule,\r\n         MatRadioModule,\r\n         MatRippleModule,\r\n         MatSelectModule,\r\n         MatBadgeModule,\r\n         MatSidenavModule,\r\n         MatSlideToggleModule,\r\n         MatSliderModule,\r\n         MatSnackBarModule,\r\n         MatSortModule,\r\n         MatStepperModule,\r\n         MatTabsModule,\r\n         MatToolbarModule,\r\n         MatTooltipModule,\r\n         MatNativeDateModule,\r\n         CdkTableModule,\r\n         A11yModule,\r\n         BidiModule,\r\n         CdkAccordionModule,\r\n         ObserversModule,\r\n         OverlayModule,\r\n         PlatformModule,\r\n         PortalModule\r\n     ]\r\n })\r\n export class MaterialModule { }\r\n ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { UserserviceService } from '../services/userservice.service';\nimport { GlobalConstant } from '../shared/global-constant';\nimport { SnackbarService } from '../snackbar.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signupForm:any=FormGroup;\n  reponseMessage:any;\n\n  constructor(private formBulder:FormBuilder,\n     private router:Router,\n     private userService:UserserviceService,\n     private snackBarService:SnackbarService,\n     private dialogRef:MatDialogRef<SignupComponent>,\n     private ngxService:NgxUiLoaderService) { }\n\n  ngOnInit(): void {\n    this.signupForm=this.formBulder.group({\n      name:[null,[Validators.required,Validators.pattern(GlobalConstant.nameRegex)]],\n      email:[null,[Validators.required,Validators.pattern(GlobalConstant.emailRegex)]],\n      contactNumber:[null,[Validators.required,Validators.pattern(GlobalConstant.contactNumberRegex)]],\n      password:[null,[Validators.required]],\n    })\n  }\n\n\n\n  handleSubmit()\n  {\n    this.ngxService.start();\n    var formData=this.signupForm.value;\n    var data={\n      name:formData.name,\n      email:formData.email,\n      contactNumber:formData.contactNumber,\n      password:formData.password,\n    }\n    this.userService.singup(data).subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.dialogRef.close();\n      this.reponseMessage= response?.message;\n      this.snackBarService.openSnackBar(this.reponseMessage,'');\n      this.router.navigate(['/']);\n\n    },(error)=>{\n      this.ngxService.stop();\n      if(error.error?.message)\n      {\n        this.reponseMessage = error.error?.message;\n      }\n      else{\n        this.reponseMessage = GlobalConstant.genericError;\n      }\n      this.snackBarService.openSnackBar(this.reponseMessage,GlobalConstant.error);\n    })\n  }\n\n}\n","<mat-toolbar color=\"primary\" >\n    <mat-toolbar-row fxLayout=\"row\">\n        <span class=\"title-center\">Sign up</span>\n    </mat-toolbar-row>\n</mat-toolbar>\n\n    <mat-dialog-content class=\"mat-typography\">\n        <form [formGroup]=\"signupForm\">\n            <div fxFlex fxLayout=\"column\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Name:</mat-label>\n                    <input matInput formControlName=\"name\" required=\"\" placeholder=\"Enter Name\">\n                    <mat-error *ngIf=\"signupForm.controls.name.touched && signupForm.controls.name.invalid\">\n                        <span *ngIf=\"signupForm.controls.name.errors.required\">This field is Required</span>\n                        <span *ngIf=\"signupForm.controls.name.errors.pattern\">This Field is invalid</span>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Email:</mat-label>\n                    <input matInput formControlName=\"email\" required=\"\" placeholder=\"Enter Email\">\n                    <mat-error *ngIf=\"signupForm.controls.email.touched && signupForm.controls.email.invalid\">\n                        <span *ngIf=\"signupForm.controls.email.errors.required\">This field is Required</span>\n                        <span *ngIf=\"signupForm.controls.email.errors.pattern\">This Field is invalid</span>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Contact Number:</mat-label>\n                    <input matInput formControlName=\"contactNumber\" required=\"\" placeholder=\"Enter Contact Number\">\n                    <mat-error *ngIf=\"signupForm.controls.contactNumber.touched && signupForm.controls.contactNumber.invalid\">\n                        <span *ngIf=\"signupForm.controls.contactNumber.errors.required\">This field is Required</span>\n                        <span *ngIf=\"signupForm.controls.contactNumber.errors.pattern\">This Field is invalid</span>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Password:</mat-label>\n                    <input type=\"password\" matInput formControlName=\"password\" required=\"\" placeholder=\"Enter Password\">\n                    <mat-error *ngIf=\"signupForm.controls.password.touched && signupForm.controls.password.invalid\">\n                        <span *ngIf=\"signupForm.controls.password.errors.required\">This field is Required</span>\n                        <span *ngIf=\"signupForm.controls.password.errors.pattern\">This Field is invalid</span>\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </form>\n    </mat-dialog-content>\n\n    <mat-dialog-actions align=\"center\">\n        <button mat-raised-button color=\"primary\" (click)=\"handleSubmit()\" [disabled]=\"!(signupForm.valid && signupForm.dirty)\">Signup</button>\n        <button mat-raised-button color=\"primary\" mat-dialog-close>Close</button>\n    </mat-dialog-actions>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { RouteGuardService } from './services/route-guard.service';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: 'cafe',\r\n    component: FullComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: '/cafe/dashboard',\r\n        pathMatch: 'full',\r\n      },\r\n      {\r\n        path: '',\r\n        loadChildren:\r\n          () => import('./material-component/material.module').then(m => m.MaterialComponentsModule),\r\n          canActivate:[RouteGuardService],\r\n          data:{\r\n            expectedRole:['admin','user']\r\n          }\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule),\r\n        canActivate:[RouteGuardService],\r\n          data:{\r\n            expectedRole:['admin','user']\r\n          }\r\n      }\r\n    ]\r\n  },\r\n  { path: '**', component: HomeComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { UserserviceService } from '../services/userservice.service';\nimport { GlobalConstant } from '../shared/global-constant';\nimport { SnackbarService } from '../snackbar.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: any = FormGroup;\n  responseMessage: any;\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private userService: UserserviceService,\n    private ngxService: NgxUiLoaderService,\n    private snackBarService: SnackbarService,\n    public dialogRef: MatDialogRef<LoginComponent>) { }\n\n  ngOnInit(): void {\n    this.loginForm= this.formBuilder.group({\n      email:[null,[Validators.required,Validators.pattern]],\n      password:[null,[Validators.required]]\n    })\n  }\n\n  handleSubmit()\n  {\n    this.ngxService.start();\n    var formData= this.loginForm.value;\n    var data={\n      email:formData.email,\n      password:formData.password\n    }\n    this.userService.login(data).subscribe((response:any)=>\n    {\n      this.ngxService.stop();\n      this.dialogRef.close();\n      localStorage.setItem('token',response.token);\n      this.router.navigate(['/cafe/dashboard'])\n    },(error)=>{\n      if(error.error?.message)\n      {\n        this.responseMessage = error?.message;\n      }\n      else\n      {\n        this.responseMessage= GlobalConstant.genericError\n      }\n    })\n    this.snackBarService.openSnackBar(this.responseMessage,GlobalConstant.error);\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row fxLayout=\"row\">\n        <span class=\"text-center\">Login</span>\n    </mat-toolbar-row>\n\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n    <form [formGroup]=\"loginForm\">\n        <div fxFlex fxLayout=\"column\">\n            <mat-form-field appearance=\"outline\" fxFlex>\n                <mat-label>Email</mat-label>\n                <input matInput formControlName=\"email\" required>\n                <mat-error *ngIf=\"loginForm.controls.email.touched && loginForm.controls.email.invalid\">\n                    <span *ngIf=\"loginForm.controls.email.errors.touched\">This Field is Required</span>\n                    <span *ngIf=\"loginForm.controls.email.errors.pattern\">This field is Invalid</span>\n                </mat-error>\n\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" fxFlex>\n                <mat-label>Password</mat-label>\n                <input type=\"password\" matInput formControlName=\"password\" required>\n                <mat-error *ngIf=\"loginForm.controls.password.touched && loginForm.controls.password.invalid\">\n                    <span *ngIf=\"loginForm.controls.password.errors.touched\">This Field is Required</span>\n                </mat-error>\n\n            </mat-form-field>\n        </div>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"center\">\n    <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"handleSubmit()\" [disabled]=\"!(loginForm.valid && loginForm.dirty)\">Login</button>\n    <button mat-raised-button color=\"primary\" mat-dialog-close>Close</button>\n\n</mat-dialog-actions>","import { Component } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ChangePasswordComponent } from 'src/app/material-component/dialog/change-password/change-password.component';\nimport { ConfirmationComponent } from 'src/app/material-component/dialog/confirmation/confirmation.component';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: []\n})\nexport class AppHeaderComponent {\n  role: any;\n  constructor(private router: Router,\n    private dialog: MatDialog) {\n\n  }\n\n  logout()\n  {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data ={\n      message:'Logout'\n    };\n    const dialogRef = this.dialog.open(ConfirmationComponent,dialogConfig)\n    const sub =dialogRef.componentInstance.onEmitStatusChange.subscribe((user)=>{\n      dialogRef.close();\n      localStorage.clear();\n      this.router.navigate(['/']);\n    })\n  }\n\n  changePassword()\n  {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '550px';\n    this.dialog.open(ChangePasswordComponent,dialogConfig)\n  }\n\n}\n","<button [matMenuTriggerFor]=\"profile\" mat-icon-button class=\"m-r-5\">\n    <mat-icon>account_circle</mat-icon>\n</button>\n<mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\n    <button mat-menu-item (click)=\"changePassword()\">\n        <mat-icon>password</mat-icon>Change Password\n    </button>\n\n    <button mat-menu-item (click)=\"logout()\">\n        <mat-icon>exit_to_app</mat-icon>Sign Out\n    </button>\n</mat-menu>","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionToggle]'\r\n})\r\nexport class AccordionAnchorDirective {\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: any) {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class TokenInterceptorInterceptor implements HttpInterceptor {\n\n  constructor(private router:Router) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const token = localStorage.getItem('token');\n    if(token)\n    {\n      request = request.clone({\n        setHeaders:{Authorization: `Bearer ${token}`}\n      })\n    }\n    return next.handle(request).pipe(\n      catchError((err)=>{\n        if(err instanceof HttpErrorResponse){\n          console.log(err.url);\n          if(err.status === 401 || err.status === 403)\n          {\n            if(this.router.url === '/'){\n              \n            }\n            else{\n              localStorage.clear();\n              this.router.navigate(['/']);\n            }\n          }\n        }\n        return throwError(err);\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}