{"version":3,"sources":["./src/app/material-component/manage-order/manage-order.component.ts","./src/app/material-component/manage-order/manage-order.component.html","./src/app/material-component/manage-category/manage-category.component.ts","./src/app/material-component/manage-category/manage-category.component.html","./src/app/material-component/material.module.ts","./src/app/material-component/dialog/category/category.component.ts","./src/app/material-component/dialog/category/category.component.html","./src/app/material-component/dialog/view-bill-products/view-bill-products.component.ts","./src/app/material-component/dialog/view-bill-products/view-bill-products.component.html","./src/app/services/product.service.ts","./node_modules/file-saver/dist/FileSaver.min.js","./src/app/material-component/manage-user/manage-user.component.ts","./src/app/material-component/manage-user/manage-user.component.html","./src/app/services/bill.service.ts","./src/app/services/category.service.ts","./src/app/material-component/dialog/product/product.component.ts","./src/app/material-component/dialog/product/product.component.html","./src/app/material-component/manage-product/manage-product.component.ts","./src/app/material-component/manage-product/manage-product.component.html","./src/app/material-component/view-bill/view-bill.component.ts","./src/app/material-component/view-bill/view-bill.component.html","./src/app/material-component/material.routing.ts"],"names":[],"mappings":"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","file":"material-component-material-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { GlobalConstant } from 'src/app/shared/global-constant';\nimport { SnackbarService } from 'src/app/snackbar.service';\nimport { saveAs } from 'file-saver';\nimport { BillService } from 'src/app/services/bill.service';\n@Component({\n  selector: 'app-manage-order',\n  templateUrl: './manage-order.component.html',\n  styleUrls: ['./manage-order.component.scss']\n})\nexport class ManageOrderComponent implements OnInit {\n  displayedColumns:string[]=['name','category','price','quantity','total','edit'];\n  dataSource:any=[];\n  manageOrderForm:any=FormGroup;\n  categories:any=[];\n  products:any =[];\n  price:any;\n  totalAmount:number = 0;\n  responseMessage:any\n  constructor(private categoryService:CategoryService,\n    private formBuilder:FormBuilder,\n    private snackbarService:SnackbarService,\n    private ngxService:NgxUiLoaderService,\n    private productService:ProductService,\n    private billService:BillService ) { }\n\n  ngOnInit(): void {\n    this.ngxService.start();\n    this.getCategory();\n    this.manageOrderForm = this.formBuilder.group({\n      name:[null,[Validators.required,Validators.pattern(GlobalConstant.nameRegex)]],\n      email:[null,[Validators.required,Validators.pattern(GlobalConstant.emailRegex)]],\n      contactNumber:[null,[Validators.required,Validators.pattern(GlobalConstant.contactNumberRegex)]],\n      paymentMethod:[null,[Validators.required]],\n      product:[null,[Validators.required]],\n      category:[null,[Validators.required]],\n      quantity:[null,[Validators.required]],\n      price:[null,[Validators.required]],\n      total:[null,[Validators.required]]\n    })\n  }\n  \n  \n  getCategory()\n  {\n    this.categoryService.getCategories().subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.categories = response;\n    },(error)=>{\n      this.ngxService.stop();\n      if(error.error?.message)\n      {\n        this.responseMessage = error.error?.message;\n      }\n      else\n      {\n        this.responseMessage = GlobalConstant.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error);\n    })\n  }\n\n  getProductByCategory(value:any)\n  {\n    this.productService.getProductsByCategory(value.id).subscribe((response:any)=>{\n      this.products = response;\n      this.manageOrderForm.controls['price'].setValue('');\n      this.manageOrderForm.controls['quantity'].setValue('1');\n      this.manageOrderForm.controls['total'].setValue(0);\n    },(error:any)=>{\n      this.ngxService.stop();\n      if(error.error?.message)\n      {\n        this.responseMessage = error.error?.message;\n      }\n      else\n      {\n        this.responseMessage = GlobalConstant.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error);\n    })\n  }\n\n  getProductDetails(value:any)\n  {\n    this.productService.getById(value.id).subscribe((response:any)=>{\n      this.price = response.price;\n      this.manageOrderForm.controls['price'].setValue(response.price);\n      this.manageOrderForm.controls['quantity'].setValue('1');\n      this.manageOrderForm.controls['total'].setValue(this.price*1);\n\n    },(error:any)=>{\n      this.ngxService.stop();\n      if(error.error?.message)\n      {\n        this.responseMessage = error.error?.message;\n      }\n      else\n      {\n        this.responseMessage = GlobalConstant.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error);\n   \n    })\n  }\n\n  setQuantity(value:any)\n  {\n    var temp = this.manageOrderForm.controls['quantity'].value;\n    if(temp > 0)\n    {\n      this.manageOrderForm.controls['total'].setValue(this.manageOrderForm.controls['quantity'].value * this.manageOrderForm.controls['price'].value)\n    }\n    else if(temp !='')\n    {\n      this.manageOrderForm.controls['quantity'].setValue('1');\n      this.manageOrderForm.controls['total'].setValue(this.manageOrderForm.controls['quantity'].value * this.manageOrderForm.controls['price'].value)\n    }\n  }\n\n  validateProductAdd()\n  {\n    if(this.manageOrderForm.controls['total'].value ===0 || this.manageOrderForm.controls['total'].value === null || this.manageOrderForm.controls['quantity'].value <= 0)\n    {\n      return true;\n    }\n    else\n    {\n      return false;\n    }\n  }\n\n  validateSubmit()\n  {\n    if(this.totalAmount == 0  || this.manageOrderForm.controls['name'].value ==null || this.manageOrderForm.controls['email'].value ==null || this.manageOrderForm.controls['contactNumber'].value ==null || this.manageOrderForm.controls['paymentMethod'].value ==null ||!(this.manageOrderForm.controls['contactNumber'].valid) ||!(this.manageOrderForm.controls['email'].valid ))\n    {\n      return true;\n    }\n    else\n    {\n      return false\n    }\n\n  }\n\n  add()\n  {\n    var formdata = this.manageOrderForm.value\n    var productName = this.dataSource.find((e:{id:number;})=>e.id == formdata.product.id);\n    if(productName === undefined)\n    {\n      this.totalAmount = this.totalAmount + formdata.total;\n      this.dataSource.push({\n        id:formdata.product.id,name:formdata.product.name,category:formdata.category.name,quantity:formdata.quantity,price:formdata.price, total:formdata.total});\n      this.dataSource =[...this.dataSource];\n      this.snackbarService.openSnackBar(GlobalConstant.productAdded,'success');\n    }\n    else{\n      this.snackbarService.openSnackBar(GlobalConstant.productExistError,GlobalConstant.error)\n    }\n  }\n\n  handleDeleteAction(value:any,element:any)\n  {\n    this.totalAmount = this.totalAmount - element.total;\n    this.dataSource.splice(value,1);\n    this.dataSource = [...this.dataSource];\n  }\n\n  submitAction()\n  {\n    this.ngxService.start();\n    var formData = this.manageOrderForm.value;\n    var data = {\n      name:formData.name,\n      email:formData.email,\n      contactNumber:formData.contactNumber,\n      paymentMethod:formData.paymentMethod,\n      totalAmount:this.totalAmount,\n      productDetails:JSON.stringify(this.dataSource)\n    }\n    this.billService.generateReport(data).subscribe((response:any)=>{\n      this.downloadFile(response?.uuid);\n      this.manageOrderForm.reset();\n      this.dataSource =[];\n      this.totalAmount = 0;\n\n    },(error:any)=>{\n      this.ngxService.stop();\n      if(error.error?.message)\n      {\n        this.responseMessage = error.error?.message;\n      }\n      else\n      {\n        this.responseMessage = GlobalConstant.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error);\n   \n    })\n  }\n\n  downloadFile(fileName:any)\n  {\n    var data = {\n      uuid:fileName\n    }\n    this.billService.getPDF(data).subscribe((response:any)=>{\n      saveAs(response,fileName +'.pdf');\n      this.ngxService.stop();\n    })\n  }\n\n\n}\n","<mat-card>\n    <b><span>Manage Order</span></b>\n    <button mat-flat-button color=\"primary\" class=\"float-right\" [disabled]=\"validateSubmit()\" (click)=\"submitAction()\">Submit & GetBill</button>\n</mat-card>\n\n<hr>\n\n<mat-card>\n    <b><span>Customer Details</span></b>\n    <form [formGroup]=\"manageOrderForm\">\n        <div fxFlex fxLayout=\"column\">\n            <div fxLayout=\"row wrap\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Name</mat-label>\n                    <input matInput formControlName=\"name\" required >\n                    <mat-error *ngIf=\"manageOrderForm.controls.name.touched && manageOrderForm.controls.name.invalid\">\n                        <span *ngIf=\"manageOrderForm.controls.name.errors.required\">This field is mandatory</span>\n                        <span *ngIf=\"manageOrderForm.controls.name.errors.pattern\">This field is invalid</span>\n\n                    </mat-error>\n\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\" required >\n                    <mat-error *ngIf=\"manageOrderForm.controls.email.touched && manageOrderForm.controls.email.invalid\">\n                        <span *ngIf=\"manageOrderForm.controls.email.errors.required\">This field is mandatory</span>\n                        <span *ngIf=\"manageOrderForm.controls.email.errors.pattern\">This field is invalid</span>\n\n                    </mat-error>\n\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Contact Number</mat-label>\n                    <input matInput formControlName=\"contactNumber\" required >\n                    <mat-error *ngIf=\"manageOrderForm.controls.contactNumber.touched && manageOrderForm.controls.contactNumber.invalid\">\n                        <span *ngIf=\"manageOrderForm.controls.contactNumber.errors.required\">This field is mandatory</span>\n                        <span *ngIf=\"manageOrderForm.controls.contactNumber.errors.pattern\">This field is invalid</span>\n\n                    </mat-error>\n\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Payment Method</mat-label>\n                    <mat-select matInput formControlName=\"paymentMethod\" required >\n                        <mat-option value=\"Cash\"> Cash</mat-option>\n                        <mat-option value=\"Credit Card\"> Credit Card</mat-option>\n                        <mat-option value=\"Debit Card\"> Debit Card</mat-option>\n                        \n                    </mat-select>\n                    <mat-error *ngIf=\"manageOrderForm.controls.paymentMethod.touched && manageOrderForm.controls.paymentMethod.invalid\">\n                        <span *ngIf=\"manageOrderForm.controls.paymentMethod.errors.required\">This field is mandatory</span>\n\n                    </mat-error>\n\n                </mat-form-field>\n            </div>\n        </div>\n    </form> \n</mat-card>\n\n<hr>\n\n<mat-card>\n    <b><span>Select Product</span></b>\n\n    <form [formGroup]=\"manageOrderForm\">\n        <div fxFlex fxLayout=\"column\">\n            <div fxLayout=\"row wrap\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Category</mat-label>\n                    <mat-select formControlName=\"category\" (selectionChange)=\"getProductByCategory($event.value)\">\n                        <mat-option *ngFor=\"let category of categories\" [value]=\"category\">\n                            {{category.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Product</mat-label>\n                    <mat-select formControlName=\"product\" (selectionChange)=\"getProductDetails($event.value)\">\n                        <mat-option *ngFor=\"let product of products\" [value]=\"product\">\n                            {{product.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Price</mat-label>\n                    <input matInput formControlName=\"price\" required readonly >\n                    <!-- <mat-error *ngIf=\"manageOrderForm.controls.price.touched && manageOrderForm.controls.price.invalid\">\n                        <span *ngIf=\"manageOrderForm.controls.price.errors.required\">This field is mandatory</span>\n                        <span *ngIf=\"manageOrderForm.controls.price.errors.pattern\">This field is invalid</span>\n\n                    </mat-error> -->\n\n                </mat-form-field>\n\n                \n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Quantity</mat-label>\n                    <input matInput formControlName=\"quantity\" required (keyup)=\"setQuantity($event)\" #input >\n                    <mat-error *ngIf=\"manageOrderForm.controls.quantity.touched && manageOrderForm.controls.quantity.invalid\">\n                        <span *ngIf=\"manageOrderForm.controls.quantity.errors.required\">This field is mandatory</span>\n                        <span *ngIf=\"manageOrderForm.controls.quantity.errors.pattern\">This field is invalid</span>\n\n                    </mat-error>\n\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Total</mat-label>\n                    <input matInput formControlName=\"total\" required readonly>\n                    <mat-error *ngIf=\"manageOrderForm.controls.total.touched && manageOrderForm.controls.total.invalid\">\n                        <span *ngIf=\"manageOrderForm.controls.total.errors.required\">This field is mandatory</span>\n                        <span *ngIf=\"manageOrderForm.controls.total.errors.pattern\">This field is invalid</span>\n\n                    </mat-error>\n\n                </mat-form-field>\n            </div>\n        </div>\n    </form>\n    <div>\n        <button mat-flat-button color=\"primary\" [disabled]=\"validateProductAdd()\" (click)=\"add()\" >Add</button>\n        <button mat-flat-button color=\"primary\" class=\"float-right\">Total Amount : {{totalAmount}}</button>\n    </div>\n</mat-card>\n\n<hr>\n\n<div class=\"responsive_table\">\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"category\">\n            <th mat-header-cell *matHeaderCellDef>Category<th>\n            <td mat-cell *matCellDef=\"let element\">{{element.category}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef>Price<th>\n            <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef>Quantity</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.quantity}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"total\">\n            <th mat-header-cell *matHeaderCellDef>Total</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.total}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>Delete</th>\n            <td mat-cell *matCellDef=\"let element; let i= index\" class=\"action-link\">\n                <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"handleDeleteAction(i,element)\">\n                    <mat-icon>delete</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns:displayedColumns;\"></tr>\n    </table>\n</div>\n\n\n","import { Component, OnInit } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { NgxUiLoaderService } from \"ngx-ui-loader\";\nimport { CategoryService } from \"src/app/services/category.service\";\nimport { GlobalConstant } from \"src/app/shared/global-constant\";\nimport { SnackbarService } from \"src/app/snackbar.service\";\nimport { CategoryComponent } from \"../dialog/category/category.component\";\n\n@Component({\n    selector: 'app-manage.category',\n    templateUrl: './manage-category.component.html',\n    styleUrls: ['./manage-category.component.scss']\n})\n\nexport class ManageCategoryComponent implements OnInit {\ndisplayedColumns:string[]=['name','edit'];\ndataSource:any;\nresponseMessage:any;\n\nconstructor(private dialog:MatDialog,\n    private router:Router,\n    private ngxService:NgxUiLoaderService,\n    private snackbarService:SnackbarService,\n    private categoryService:CategoryService)\n{\n    \n}\n\nngOnInit(): void {\n    this.ngxService.start();\n    this.tableData();\n}\n\n    tableData()\n    {\n        this.categoryService.getCategories().subscribe((response:any)=>{\n            this.ngxService.stop();\n            this.dataSource = new MatTableDataSource(response);\n\n        },(error:any)=>{\n            this.ngxService.stop();\n            if(error.error?.message)\n            {\n                this.responseMessage = error.error?.message;\n            }\n            else\n            {\n                this.responseMessage = GlobalConstant.genericError;\n            }\n            this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error)\n        })\n\n    }\n\n    applyFiter(event:Event)\n    {\n        const fiterValue =(event.target as HTMLInputElement).value\n        this.dataSource.filter = fiterValue.trim().toLocaleLowerCase();\n    }\n\n    handleAddActions()\n    {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.data ={\n            action:'Add'\n        }\n        dialogConfig.width ='550px';\n        const dialogRef = this.dialog.open(CategoryComponent,dialogConfig)\n        this.router.events.subscribe(()=>{\n            dialogRef.close();\n        });\n        const sub = dialogRef.componentInstance.onAddCategory.subscribe(\n            (response)=>{\n                this.tableData();\n            }\n        )\n    }\n\n    handleEditActions(values:any)\n    {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.data ={\n            action:'Edit',\n            data:values\n        }\n        dialogConfig.width ='550px';\n        const dialogRef = this.dialog.open(CategoryComponent,dialogConfig)\n        this.router.events.subscribe(()=>{\n            dialogRef.close();\n        });\n        const sub = dialogRef.componentInstance.onEditCategory.subscribe(\n            (response)=>{\n                this.tableData();\n            }\n        )\n    }\n}","<mat-card>\n    <b><span>Manage Category</span></b>\n    <button mat-flat-button color=\"primary\" class=\"float-right\" (click)=\"handleAddActions()\">Add Category</button>\n</mat-card>\n<hr>\n\n<mat-card>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFiter($event)\" #input>\n\n    </mat-form-field>\n</mat-card>\n\n<hr>\n\n<div class=\"responsive_table\">\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>Action</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n                <button mat-icon-button color=\"primary\" matTooltip=\"Edit\" (click)=\"handleEditActions(element)\">\n                    <mat-icon>edit</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns:displayedColumns\"></tr>\n\n    </table>\n\n</div>\n\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { MaterialRoutes } from './material.routing';\r\nimport { MaterialModule } from '../shared/material-module';\r\nimport { ViewBillProductsComponent } from './dialog/view-bill-products/view-bill-products.component';\r\nimport { ConfirmationComponent } from './dialog/confirmation/confirmation.component';\r\nimport { ChangePasswordComponent } from './dialog/change-password/change-password.component';\r\nimport { ManageCategoryComponent } from './manage-category/manage-category.component';\r\nimport { CategoryComponent } from './dialog/category/category.component';\nimport { ManageProductComponent } from './manage-product/manage-product.component';\nimport { ProductComponent } from './dialog/product/product.component';\nimport { ManageOrderComponent } from './manage-order/manage-order.component';\nimport { ViewBillComponent } from './view-bill/view-bill.component';\nimport { ManageUserComponent } from './manage-user/manage-user.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(MaterialRoutes),\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    CdkTableModule\r\n  ],\r\n  providers: [],\r\n  declarations: [\r\n    ViewBillProductsComponent,\r\n    ConfirmationComponent,\r\n    ChangePasswordComponent,\r\n    ManageCategoryComponent,\r\n    CategoryComponent,\r\n    ManageProductComponent,\r\n    ProductComponent,\r\n    ManageOrderComponent,\r\n    ViewBillComponent,\r\n    ManageUserComponent    \r\n  ]\r\n})\r\nexport class MaterialComponentsModule {}\r\n","import { Component, OnInit,Inject, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { GlobalConstant } from 'src/app/shared/global-constant';\nimport { SnackbarService } from 'src/app/snackbar.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss']\n})\nexport class CategoryComponent implements OnInit {\n onAddCategory = new EventEmitter();\n onEditCategory = new EventEmitter();\n  categoryForm:any = FormGroup;\n  dialogAction:any = 'Add';\n  responseMessage:any;\n  action: any='Add';\n\n\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData:any,\n    private categoryService:CategoryService,\n    private ngxService:NgxUiLoaderService,\n    private dialog:MatDialog,\n    private formBuilder:FormBuilder,\n    private snackbarService:SnackbarService,\n    private router:Router,\n    private dialogRef:MatDialogRef<CategoryComponent>\n    ) { }\n\n  ngOnInit(): void {\n    this.categoryForm = this.formBuilder.group({\n      name:[null,[Validators.required]]\n    });\n\n    if(this.dialogData.action === 'Edit')\n    {\n      this.dialogAction = \"Edit\";\n      this.action = \"Update\";\n      this.categoryForm.patchValue(this.dialogData.data);\n    }\n\n    \n   \n  }\n\n  handleSubmit()\n    {\n      if(this.dialogAction === 'Edit')\n      {\n        this.edit();\n      }\n      else\n      {\n        this.add();\n      }\n    }\n\n    add()\n    {\n      var formData = this.categoryForm.value;\n      var data = {\n        name:formData.name,\n      }\n      this.categoryService.add(data).subscribe((response:any)=>{\n        this.dialogRef.close();\n        this.onAddCategory.emit();\n        this.responseMessage = response.message;\n        this.snackbarService.openSnackBar(this.responseMessage,\"sucess\")\n      },(error)=>{\n        this.dialogRef.close();\n        if(error.error?.message)\n        {\n          this.responseMessage = error.error?.message;\n        }\n        else\n        {\n          this.responseMessage = GlobalConstant.genericError;;\n        }\n        this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error)\n      })\n    }\n    edit()\n    {\n      var formData = this.categoryForm.value;\n      var data = {\n        id:this.dialogData.data.id,\n        name:formData.name,\n      }\n      this.categoryService.update(data).subscribe((response:any)=>{\n        this.dialogRef.close();\n        this.onEditCategory.emit();\n        this.responseMessage = response.message;\n        this.snackbarService.openSnackBar(this.responseMessage,\"sucess\")\n      },(error)=>{\n        this.dialogRef.close();\n        if(error.error?.message)\n        {\n          this.responseMessage = error.error?.message;\n        }\n        else\n        {\n          this.responseMessage = GlobalConstant.genericError;;\n        }\n        this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error)\n      })\n\n    }\n\n \n\n}\n","<mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row fxLayout=\"row\">\r\n        <span class=\"title-center\">{{dialogData.action}} Category</span>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n\r\n<mat-dialog-content class=\"mat-typography\">\r\n    <form [formGroup]=\"categoryForm\">\r\n        <div fxFlex fxLayout=\"column\">\r\n            <mat-form-field appearance=\"outline\" fxFlex>\r\n                <mat-label>Name</mat-label>\r\n                <input matInput formControlName=\"name\" required>\r\n                <mat-error *ngIf=\"categoryForm.controls.name.touched && categoryForm.controls.name.invalid\">\r\n                    <span *ngIf=\"categoryForm.controls.name.required\">This field is mandatory</span>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"center\">\r\n    <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"handleSubmit()\" [disabled]=\"!(categoryForm.valid && categoryForm.dirty)\">{{action}}</button>\r\n    <button mat-raised-button mat-dialog-close color=\"primary\">Close</button>\r\n</mat-dialog-actions>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-view-bill-products',\n  templateUrl: './view-bill-products.component.html',\n  styleUrls: ['./view-bill-products.component.scss']\n})\nexport class ViewBillProductsComponent implements OnInit {\n  displayColumns: string[] = ['name', 'category', 'price', 'quantity', 'total'];\n  dataSource: any;\n  data: any;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData: any,\n    public dialogRef: MatDialogRef<ViewBillProductsComponent>,\n\n  ) { }\n\n  ngOnInit() {\n    this.data=this.dialogData.data;\n    this.dataSource = JSON.parse(this.dialogData.data.productDetails);\n  }\n}\n","<mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row fxLayout=\"row\">\r\n        <span class=\"title-center\">View Bill</span>\r\n    <span class=\"spacer\"></span>\r\n    <button class=\"mat-dialog-close\" mat-dialog-close mat-icon-button>\r\n        <mat-icon>cancel</mat-icon>\r\n    </button>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n\r\n<mat-dialog-content class=\"mat-typography\">\r\n    <table id=\"customers\">\r\n        <tr>\r\n            <td><b>Name :</b> {{data.name}}</td>\r\n            <td><b>Email :</b> {{data.email}}</td>\r\n        </tr>\r\n        \r\n        <tr>\r\n            <td><b>Contact Number :</b> {{data.contactNumber}}</td>\r\n            <td><b>Payment Method :</b> {{data.paymentMethod}}</td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"responsive_table\">\r\n        <hr>\r\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n            <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef>Name</th>\r\n                <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"category\">\r\n                <th mat-header-cell *matHeaderCellDef>Category</th>\r\n                <td mat-cell *matCellDef=\"let element\">{{element.category}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"price\">\r\n                <th mat-header-cell *matHeaderCellDef>Price</th>\r\n                <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"quantity\">\r\n                <th mat-header-cell *matHeaderCellDef>Quantity</th>\r\n                <td mat-cell *matCellDef=\"let element\">{{element.quantity}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"total\">\r\n                <th mat-header-cell *matHeaderCellDef>Total</th>\r\n                <td mat-cell *matCellDef=\"let element\">{{element.total}}</td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns; sticky:true\"></tr>\r\n            <tr mat-row *matRowDef='let row; columns:displayColumns;'></tr>\r\n\r\n        </table>\r\n\r\n    </div>\r\n</mat-dialog-content>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  url= environment.apiUrl;\n  constructor(private http:HttpClient,) { }\n\n  add(data:any)\n  {\n    return this.http.post(this.url + '/product/add',data,{\n      headers:new HttpHeaders().set('Content-Type',\"application/json\")\n    })\n  }\n\n  update(data:any)\n  {\n    return this.http.patch(this.url + '/product/update/',data,{\n      headers: new HttpHeaders().set('Content-Type','application/json')\n    })\n  }\n\n  getProducts()\n  {\n    return this.http.get(this.url + '/product/get/');\n  }\n\n  updateStatus(data:any)\n  {\n    return this.http.patch(this.url + '/product/updateStatus/',data,{\n      headers: new HttpHeaders().set('Content-Type','application/json')\n    })\n  }\n\n  delete(id:any)\n  {\n    return this.http.delete(this.url + \"/product/delete/\"+id,{\n      headers: new HttpHeaders().set('Content-Type',\"application/json\")\n    })\n  }\n\n  getProductsByCategory(id:any)\n  {\n    return this.http.get(this.url + '/product/getByCategory/' +id);\n  }\n\n  getById(id:any)\n  {\n    return this.http.get(this.url + '/product/getById/' + id )\n  }\n\n}\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { UserserviceService } from 'src/app/services/userservice.service';\nimport { GlobalConstant } from 'src/app/shared/global-constant';\nimport { SnackbarService } from 'src/app/snackbar.service';\n\n@Component({\n  selector: 'app-manage-user',\n  templateUrl: './manage-user.component.html',\n  styleUrls: ['./manage-user.component.scss']\n})\nexport class ManageUserComponent implements OnInit {\n  displayedColumns:string[]=['name','email','contactNumber','status'];\n  dataSource:any;\n  responseMessage:any;\n  constructor(\n    private ngxService:NgxUiLoaderService,\n    private snackbarService:SnackbarService,\n    private userService:UserserviceService,\n\n  ) { }\n\n  ngOnInit(): void {\n    this.ngxService.start();\n    this.tableData();\n  }\n\n  tableData()\n  {\n    this.userService.getUsers().subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.dataSource = new MatTableDataSource(response);\n    },(error:any)=>{\n      this.ngxService.stop();\n      if(error.error?.message)\n      {\n        this.responseMessage = error.error?.message;\n      }\n      else\n      {\n        this.responseMessage = GlobalConstant.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error);\n    })\n  }\n\n  applyFiter(event:Event)\n  {\n      const fiterValue =(event.target as HTMLInputElement).value\n      this.dataSource.filter = fiterValue.trim().toLocaleLowerCase();\n  }\n\n  handleChangeAction(status:any,id:any)\n  {\n    this.ngxService.start();\n    var data ={\n      status:status.toString(),\n      id:id\n    }\n    this.userService.update(data).subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.responseMessage = response?.message;\n      this.snackbarService.openSnackBar(this.responseMessage,'Sucecess');\n    },(error:any)=>{\n      this.ngxService.stop();\n      if(error.error?.message)\n      {\n        this.responseMessage = error.error?.message;\n      }\n      else\n      {\n        this.responseMessage = GlobalConstant.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error);\n    })\n  }\n\n}\n","<mat-card>\n    <b><span>Manage User</span></b>\n</mat-card>\n<hr>\n\n<mat-card>\n    <mat-form-field appearance=\"outline\">\n        <mat-label >Filter</mat-label>\n        <input matInput (keyup)=\"applyFiter($event)\" #input>\n    </mat-form-field>\n</mat-card>\n\n<hr>\n\n<div class=\"responsive_table\">\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef>Email</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.email}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"contactNumber\">\n            <th mat-header-cell *matHeaderCellDef>Contact Number</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.contactNumber}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef>Action</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n                <mat-slide-toggle (change)=\"handleChangeAction($event.checked,element.id)\" matTooltip=\"Activate or Deactivate User\"  [checked]=\"element.status\"></mat-slide-toggle>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns:displayedColumns\"></tr>\n\n    </table>\n\n</div>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillService {\n  url = environment.apiUrl;\n\n  constructor(private httpClient:HttpClient) { }\n\n  generateReport(data:any)\n  {\n    return this.httpClient.post(this.url + 'bill/generateReport/',data,{\n      headers:new HttpHeaders().set(\"Content-Type\",'application/json')\n    })\n  }\n\n  getPDF(data:any):Observable<Blob>\n  {\n    return this.httpClient.post(this.url + '/bill/getPdf',data,{responseType:'blob'});\n  }\n\n  getBills()\n  {\n    return this.httpClient.get(this.url + '/bill/getBills/')\n  }\n\n  delete(id:any)\n  {\n   return this.httpClient.delete(this.url + '/bill/delete/'+id,{\n      headers:new HttpHeaders().set('Content-Type','application/json')\n    })\n  }\n\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n url =environment.apiUrl;\n\n  constructor(private http:HttpClient,\n    ) { }\n\n    add(data:any)\n    {\n      return this.http.post(this.url + '/category/add',data,{\n        headers: new HttpHeaders().set('Content-Type',\"application/json\")\n      } )\n    }\n\n    \n    update(data:any)\n    {\n      return this.http.patch(this.url + '/category/update',data,{\n        headers: new HttpHeaders().set('Content-Type',\"application/json\")\n      })\n    }\n\n    getCategories()\n    {\n      return this.http.get(this.url + '/category/get');\n    }\n\n    \n}\n","import { Component, OnInit, EventEmitter, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { GlobalConstant } from 'src/app/shared/global-constant';\nimport { SnackbarService } from 'src/app/snackbar.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent implements OnInit {\n  onAddProduct = new EventEmitter();\n  onEditProduct = new EventEmitter();\n  productForm: any = FormGroup;\n  dialogAction: any = \"Add\";\n  action: any = \"Add\";\n  responsemessage: any;\n  category: any = [];\n  categories: any;\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData: any,\n    private formBuilder: FormBuilder,\n    private productService: ProductService,\n    public dialogRef: MatDialogRef<ProductComponent>,\n    private categoryService: CategoryService,\n    private snackbarService: SnackbarService\n  ) { }\n\n  ngOnInit(): void {\n    this.productForm = this.formBuilder.group({\n      name: [null, [Validators.required, Validators.pattern(GlobalConstant.nameRegex)]],\n      categoryId: [null, [Validators.required]],\n      price: [null, [Validators.required]],\n      description: [null, [Validators.required]],\n\n    })\n\n    if (this.dialogData.action === 'Edit') {\n      this.dialogAction = 'Edit';\n      this.action = \"Update\";\n      this.productForm.patchValue(this.dialogData.data);\n    }\n    this.getCategories();\n  }\n\n  getCategories()\n  {\n    this.categoryService.getCategories().subscribe((response:any)=>{\n      this.categories = response\n    },(error:any)=>{\n      if(error.error?.message)\n      {\n        this.responsemessage = error.error?.message;\n      }\n      else\n      {\n        this.responsemessage = GlobalConstant.genericError;\n      }\n    })\n    this.snackbarService.openSnackBar(this.responsemessage,GlobalConstant.error)\n  }\n\n  handleSubmit()\n  {\n   if(this.dialogAction === \"Edit\")\n   {\n    this.edit();\n   } \n   else\n   {\n    this.add();\n   }\n  }\n\n  edit()\n  {\n    var formData = this.productForm.value;\n    var data ={\n      id:this.dialogData.data.id,\n      name:formData.name,\n      categoryId:formData.categoryId,\n      price:formData.price,\n      description:formData.description,\n    }\n    this.productService.update(data).subscribe((response:any)=>{\n      this.dialogRef.close();\n      this.onEditProduct.emit();\n      this.responsemessage = response.message;\n      this.snackbarService.openSnackBar(this.responsemessage,'success')\n    },(error:any)=>{\n      if(error.error?.message)\n      {\n        this.responsemessage = error.error?.message;\n      }\n      else\n      {\n        this.responsemessage = GlobalConstant.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responsemessage,GlobalConstant.error)\n    })\n\n  }\n\n \n\n  add()\n  {\n    var formData = this.productForm.value;\n    var data ={\n      name:formData.name,\n      categoryId:formData.categoryId,\n      price:formData.price,\n      description:formData.description,\n    }\n    this.productService.add(data).subscribe((response:any)=>{\n      this.dialogRef.close();\n      this.onAddProduct.emit();\n      this.responsemessage = response.message;\n      this.snackbarService.openSnackBar(this.responsemessage,'success')\n    },(error:any)=>{\n      if(error.error?.message)\n      {\n        this.responsemessage = error.error?.message;\n      }\n      else\n      {\n        this.responsemessage = GlobalConstant.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responsemessage,GlobalConstant.error)\n    })\n  }\n\n\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row fxLayout=\"row\">\n        <span class=\"title-center\">{{dialogData.action}} Product</span>\n    </mat-toolbar-row>\n</mat-toolbar>\n\n\n\n<mat-dialog-content class=\"mat-typography\">\n    <form [formGroup]=\"productForm\">\n        <div fxFlex fxLayout=\"column\">\n            <div fxLayout=\"row wrap\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Name</mat-label>\n                    <input matInput formControlName=\"name\" required>\n                    <mat-error *ngIf=\"productForm.controls.name.touched && productForm.controls.name.invalid\">\n                        <span *ngIf=\"productForm.controls.name.errors.required\">This field is mandatory</span>\n                        <span *ngIf=\"productForm.controls.name.errors.pattern\">This field is invalid</span>\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"row wrap\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Price</mat-label>\n                    <input matInput formControlName=\"price\" required>\n                    <mat-error *ngIf=\"productForm.controls.price.touched && productForm.controls.price.invalid\">\n                        <span *ngIf=\"productForm.controls.price.errors.required\">This field is mandatory</span>\n                        <span *ngIf=\"productForm.controls.price.errors.pattern\">This field is invalid</span>\n                    </mat-error>\n                </mat-form-field>\n\n\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Category</mat-label>\n                    <mat-select formControlName=\"categoryId\">\n                        <mat-option *ngFor=\"let category of categories\" [value]=\"category.id\">\n                            {{category.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"row wrap\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Description</mat-label>\n                    <input matInput formControlName=\"description\" required>\n                    <mat-error *ngIf=\"productForm.controls.description.touched && productForm.controls.description.invalid\">\n                        <span *ngIf=\"productForm.controls.description.errors.required\">This field is mandatory</span>\n                        <span *ngIf=\"productForm.controls.description.errors.pattern\">This field is invalid</span>\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n            \n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"center\">\n    <button mat-raised-button color=\"primary\" type=\"submit\"\n    [disabled]=\"!(productForm.valid && productForm.dirty)\" (click)=\"handleSubmit()\">{{action}}</button>\n\n    <button mat-raised-button color=\"primary\" mat-dialog-close>Close</button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { ProductService } from 'src/app/services/product.service';\nimport { GlobalConstant } from 'src/app/shared/global-constant';\nimport { SnackbarService } from 'src/app/snackbar.service';\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\nimport { ProductComponent } from '../dialog/product/product.component';\n\n@Component({\n  selector: 'app-manage-product',\n  templateUrl: './manage-product.component.html',\n  styleUrls: ['./manage-product.component.scss']\n})\nexport class ManageProductComponent implements OnInit {\n  displayedColumns:string[]=['name','categoryName','description','price','edit'];\n  dataSource:any;\n  responseMessage:any;\n  constructor(private productService:ProductService,\n    private ngxService:NgxUiLoaderService,\n    private dialog:MatDialog,\n    private snackbarService:SnackbarService,\n    private router:Router) { }\n\n  ngOnInit(): void {\n    this.ngxService.start();\n    this.tableData();\n  }\n\n  tableData()\n  {\n    this.productService.getProducts().subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.dataSource = new MatTableDataSource(response)\n    },(error)=>{\n      this.ngxService.stop();\n      console.log(error)\n      if(error.error?.message)\n      {\n        this.responseMessage = error.error?.message;\n      }\n      else\n      {\n        this.responseMessage = GlobalConstant.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error)\n    })\n  }\n\n  applyFiter(event:Event)\n  {\n      const fiterValue =(event.target as HTMLInputElement).value\n      this.dataSource.filter = fiterValue.trim().toLocaleLowerCase();\n  }\n\n \n\n  handleAddAction()\n  {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data ={\n      action:'Add'\n    }\n    dialogConfig.width ='550px';\n    const dialogRef = this.dialog.open(ProductComponent,dialogConfig);\n    this.router.events.subscribe(()=>{\n      dialogRef.close();\n\n    });\n    const sub = dialogRef.componentInstance.onAddProduct.subscribe(\n      (response)=>{\n        this.tableData();\n      }\n    )\n  }\n\n  handleEditAction(values:any)\n  {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data ={\n      action:'Edit',\n      data:values\n    }\n    dialogConfig.width ='550px';\n    const dialogRef = this.dialog.open(ProductComponent,dialogConfig);\n    this.router.events.subscribe(()=>{\n      dialogRef.close();\n\n    })\n    const sub = dialogRef.componentInstance.onEditProduct.subscribe(\n      (response)=>{\n        this.tableData();\n      }\n    )\n\n  }\n\n  handleDeleteAction(values:any)\n  {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data={\n      message:' delete' + ' '+ values.name + ' product'  \n    }\n\n    const dialogRef = this.dialog.open(ConfirmationComponent,dialogConfig);\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe((response)=>{\n      this.ngxService.start();\n      this.deleteProduct(values.id)\n      dialogRef.close();\n    })\n\n  }\n\n  deleteProduct(id:any)\n  {\n    this.productService.delete(id).subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.tableData();\n      this.responseMessage = response?.message;\n      this.snackbarService.openSnackBar(this.responseMessage,'success');\n    },(error:any)=>{\n      this.ngxService.stop();\n      console.log(error)\n      if(error.error?.message)\n      {\n        this.responseMessage = error.error?.message;\n      }\n      else\n      {\n        this.responseMessage = GlobalConstant.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error);\n\n    })\n  }\n\n  onChange(status:any,id:any)\n  {\n    var data = {\n      status:status.toString(),\n      id:id\n    }\n    this.productService.updateStatus(data).subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.responseMessage = response?.message;\n      this.snackbarService.openSnackBar(this.responseMessage,'success')\n    },(error)=>{\n      this.ngxService.stop();\n      console.log(error)\n      if(error.error?.message)\n      {\n        this.responseMessage = error.error?.message;\n      }\n      else\n      {\n        this.responseMessage = GlobalConstant.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error);\n\n    })\n\n  }\n\n}\n","<mat-card>\n    <b><span>Manage Product</span></b>\n    <button mat-flat-button color=\"primary\" class=\"float-right\" (click)=\"handleAddAction()\">Add Product</button>\n</mat-card>\n<hr>\n\n<mat-card>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFiter($event)\" #input>\n    </mat-form-field>\n</mat-card>\n<hr>\n<div class=\"responsive_table\">\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Name</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"categoryName\">\n            <th mat-header-cell *matHeaderCellDef> Category</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.categoryName}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"description\">\n            <th mat-header-cell *matHeaderCellDef> Description</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.description}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef> Price</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef> Action</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n                <button mat-icon-button color=\"primary\" matTooltip=\"Edit\" (click)=\"handleEditAction(element)\">\n                    <mat-icon>edit</mat-icon>\n                </button>\n\n                <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"handleDeleteAction(element)\">\n                    <mat-icon>delete</mat-icon>\n                </button>\n\n                <mat-slide-toggle (change)=\"onChange($event.checked,element.id)\" matTooltip=\"Activate or Deactivate Product\" [checked]=\"element.status\"></mat-slide-toggle>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns:displayedColumns\"></tr>\n\n<!-- \n        <tr mat-header-row *matHeaderCellDef=\"displayedColumns; sticky:true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns:displayedColumns\"></tr>\n     -->\n    </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { BillService } from 'src/app/services/bill.service';\nimport { GlobalConstant } from 'src/app/shared/global-constant';\nimport { SnackbarService } from 'src/app/snackbar.service';\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\nimport { ViewBillProductsComponent } from '../dialog/view-bill-products/view-bill-products.component';\nimport { saveAs } from 'file-saver';\n@Component({\n  selector: 'app-view-bill',\n  templateUrl: './view-bill.component.html',\n  styleUrls: ['./view-bill.component.scss']\n})\nexport class ViewBillComponent implements OnInit {\n  displayColumns:string[]=['name','email','contactNumber','paymentMethod','total','view'];\n  dataSource:any;\n  responseMessage:any;\n  constructor(private billService:BillService,\n    private ngxService:NgxUiLoaderService,\n    private dialog:MatDialog,\n    private router:Router,\n    private snackbarService:SnackbarService) { }\n\n  ngOnInit(): void {\n    this.tableData();\n  }\n\n  tableData()\n  {\n    this.billService.getBills().subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.dataSource = new MatTableDataSource(response)\n    },(error:any)=>{\n      this.ngxService.stop();\n      if(error.error?.message)\n      {\n        \n      }\n      else\n      {\n        this.responseMessage = GlobalConstant.genericError; \n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error);\n    })\n  }\n\n  applyFilter(event:Event)\n  {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLocaleLowerCase();\n  }\n\n  handleViewAction(values:any)\n  {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data ={\n      data:values\n    };\n    dialogConfig.width ='100%';\n    const dialogRef = this.dialog.open(ViewBillProductsComponent,dialogConfig);\n    this.router.events.subscribe(()=>{\n      dialogRef.close();\n    })\n  }\n\n  handleDeleteAction(values:any)\n  {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data ={\n      message:'delete' + ' '+ values.name+' bill'\n    };\n    const dialogRef = this.dialog.open(ConfirmationComponent,dialogConfig);\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe((response:any)=>{\n    this.ngxService.start();\n    this.deleteProduct(values.id);\n    dialogRef.close();\n    })\n  }\n\n  deleteProduct(id:any)\n  {\n    this.billService.delete(id).subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.tableData();\n      this.responseMessage = response?.message;\n      this.snackbarService.openSnackBar(this.responseMessage,'success');\n    },(error:any)=>{\n        this.ngxService.stop();\n        if(error.error?.message)\n        {\n          this.responseMessage = error.error?.message;\n        }\n        else\n        {\n          this.responseMessage = GlobalConstant.genericError;\n        }\n        this.snackbarService.openSnackBar(this.responseMessage,GlobalConstant.error);\n    })\n  }\n\n  downloadReportAction(values:any)\n  {\n    this.ngxService.start();\n    var data = {\n      name:values.name,\n      email:values.email,\n      uuid:values.uuid,\n      contactNumber:values.contactNumber,\n      paymentMethod:values.paymentMethod,\n      totalAmount:values.total,\n      productDetails:values.productDetails\n    }\n    this.billService.getPDF(data).subscribe((response:any)=>{\n      saveAs(response,values.uuid+'.pdf');\n      this.ngxService.stop();\n    })\n  }\n}\n","<mat-card>\n    <b><span>View Bill</span></b>\n</mat-card>\n<hr>\n<mat-card>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" #input>\n    </mat-form-field>\n</mat-card>\n\n<hr>\n\n<div class=\"responsive_table\">\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"name\" >\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\" >\n            <th mat-header-cell *matHeaderCellDef>Email</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.email}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"contactNumber\" >\n            <th mat-header-cell *matHeaderCellDef>Contact Number</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.contactNumber}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"paymentMethod\" >\n            <th mat-header-cell *matHeaderCellDef>Payment Method</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.paymentMethod}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"total\" >\n            <th mat-header-cell *matHeaderCellDef>Total</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.total}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"view\" >\n            <th mat-header-cell *matHeaderCellDef>Action</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"class-link\">\n                <button mat-icon-button color=\"primary\" matTooltip=\"View\" (click)=\"handleViewAction(element)\">\n                    <mat-icon>visibility</mat-icon>\n                </button>\n\n                <button mat-icon-button color=\"primary\" matTooltip=\"Download Bill\" (click)=\"downloadReportAction(element)\">\n                    <mat-icon>summarize</mat-icon>\n                </button>\n\n                <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"handleDeleteAction(element)\">\n                    <mat-icon>delete</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayColumns; sticky:true;\"></tr>\n        <tr mat-row *matRowDef=\"let row;columns:displayColumns;\"></tr>\n        <tr></tr>\n    </table>\n</div>","import { Routes } from '@angular/router';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { RouteGuardService } from '../services/route-guard.service';\nimport { ManageCategoryComponent } from './manage-category/manage-category.component';\nimport { ManageOrderComponent } from './manage-order/manage-order.component';\nimport { ManageProductComponent } from './manage-product/manage-product.component';\nimport { ManageUserComponent } from './manage-user/manage-user.component';\nimport { ViewBillComponent } from './view-bill/view-bill.component';\n\n\nexport const MaterialRoutes: Routes = [\n    {\n    path:'category',\n    component:ManageCategoryComponent,\n    canActivate:[RouteGuardService],\n    data:{\n        expectedRole:['admin']\n    }\n},\n{\n    path:'product',\n    component:ManageProductComponent,\n    canActivate:[RouteGuardService],\n    data:{\n        expectedRole:['admin']\n    }\n},\n\n{\n    path:'order',\n    component:ManageOrderComponent,\n    canActivate:[RouteGuardService],\n    data:{\n        expectedRole:['admin','user']\n    }\n},\n\n{\n    path:'bill',\n    component:ViewBillComponent,\n    canActivate:[RouteGuardService],\n    data:{\n        expectedRole:['admin','user']\n    }\n},\n\n{\n    path:'user',\n    component:ManageUserComponent,\n    canActivate:[RouteGuardService],\n    data:{\n        expectedRole:['admin']\n    }\n},\n\n];\n"],"sourceRoot":"webpack:///"}